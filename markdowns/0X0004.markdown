# 什么是字符

在日常的交流中，在不涉及信息技术的时候，“字符”这个词是很少使用的。但是当你谈及信息技术，谈及电脑、手机、网络、电子等话题的时候，这又是一个绕不开的词汇。这一期我们就来聊一聊到底什么是“字符”。

## 文字的单元

在人类最初创造文字的时候可能并没有明确想过文字的基本单元是什么，即便是想过，创造不同文字的人的想法可能也不太一样。因而关于什么是文字的基本单元这个问题是比较难回答的。如果将这个问题放到全球和人类历史的背景下，它将更难回答。

凭借我们的自然语言经验，汉字的基本单元是什么呢？你可能会觉得是单字，但是这个说法也面临很多挑战。例如汉字书写的文章中基本的表义单位是词汇，而一个词汇中可能包含多个单字；一个单字内部也可以拆分出不同的偏旁部首；从书写的角度讲单字又是一笔一划写成的。拉丁文的境况也好不了多少，虽然拉丁有所谓的字母，但是说字母就是拉丁文的基本单元也欠妥。例如拉丁文也是以词汇作为表义的基本单元的；拉丁文的字母也能进一步拆解为笔画；拉丁文字母有很多合写的情况；对于同一个字母又有很多不同的写法，这些不同的写法有时表达不同的意思有时又没啥含义上的区别。除了汉字和拉丁文，其实各种文字研究中都会遇到类似的问题。由于我们不可能再去问文字最初的设计者，也不可能在短时间内对文字设计进行系统的改进，解决这类问题的方法就是人为约定一个最小单元。例如我们一般约定汉字的基本单元就是单字，英文的基本单元就是26个字母的大小写（一共52个符号）外加一些标点，阿拉伯数字就是0到9这10个符号。可能直观上、使用方法上或使用频率上一个字母并不能和一个汉语单字相提并论，但是我们就规定它们是各自文字体系种的基本单元，当多种文字混用的时候它们处于相同的地位。这种我们人为规定的文字基本单元就叫字符。例如“上”是一个字符，“繁”是一个字符，“C”是一个字符，“+”也是一个字符。

当然了随着历史的发展，“字符”一词的外延也逐渐变大。人们会将一些表示结构、样式、动作命令等实际上没法直接书写或打印出来的东西也称为字符。不过这类字符目前看来所占比例是相当小的，而且其功能也可以被很多其他东西替代，因而我们常常可以忽略它们。

## 字符的两面

回想一下我们学习汉字的经历，如果我们仅仅会写一个汉字而不知道它的读音、含义和相关词组自然不能算学会了这个汉字。如果我们知道一个汉字的读音和含义，但是忘了怎么写，也不能算我们掌握了这个汉字。由此可知，一个字符包含两个部分，一部分是它的写法，我们称之为字形；一部分是它的含义、读音、相关词组等无形的属性，我们不妨简称为字义。字形和字义对应组合起来才是一个字符。

在自然形成的文字系统种，字形和字义之间往往并不是一一对应的。我们可能遇到一字多义，多字近义，异体字形，通假替换等等现象。因而在学习、研究和信息传递中仅仅使用字形和字义区分字符有时候会不太可靠。更不用说在有的情况下我们是无法使用字形和字义来表示字符的。例如在电子计算机的硬盘上，我们很难把汉字直接刻在盘面上，更不用说刻汉字释义了。因此我们需要一种独立于字形和字义的区分不同字符的方式。一种通用的方式就是给字符编号，用字符的编号来指代一组字形和字义的组合。这种编号就叫做字符编码。

## 字符编码

字符编码是一个名词，也是一个动词。作为动词来说它指给字符编号这一工作。作为名词来说它指一套编码方案，也可以指某个字符在某一套编码方案中的编号。

历史上有过很多字符编码方案，现在基本统一于Unicode方案。这个方案致力于给全球范围内，古往今来，所有人类文字系统划定基本单元（也就是字符）并把这些单元编入一个统一的编号系统中。如果感兴趣的话，可以到[Unicode的官网](https://home.unicode.org/)上看看。关于这个编码方案的细节不是我们本节的重点。不管这个方案具体怎么样，有了这个方案之后，我们平常能用到的阿拉伯数字、大小写拉丁字母、数学符号、英文标点、繁简汉字等字符都有了各自的编号。有了编号之后，我们在指代一个字符的时候，就可以直接用它的编号来指代它。因此，人们有时候也把“字符编码”简称为“字符”——反正两者是可以对应起来的。

## 字符的存储

早期的字符编码可以直接作为字符在计算机中的存储和传输形式，例如ASCII用7 bits表示一个字符。存储一个字符就是存储这个字符的编码。这时“字符”一词又多了一个义项——表示一个存储字符的数据结构。从编码的角度来讲两个相同的字符自然只有一个编码，例如在ASCII中不管多少个字符“A”，它们的编码都是0X41。但是从计算机存储的角度来说存储“A”只需要一个7 bits字节，存储“AA”则需要两个7 bits字节，存储“AAA”需要3个7 bits字节。

后来计算机统一用8 bits字节作为存储和信息传输的基本单元，ASCII也扩展到8 bits字节。因此在几十年前的计算机学科相关的语境下，一个“字符”差不多就是指一个8 bits字节数据结构。但是这一认识也仅限于那个年代，在计算机位数不断上升和Unicode不断发展的大背景下，字符的编码和存储字符编码的数据结构逐渐分离。Unicode只是用自然数给字符编码，但具体这个编码如何在计算机中存储，则不是字符编码负责的。一般通过一个名为UTF-8的协议讲Unicode编码转化为一种变长编码，用一个、两个、三个、四个或者更多字节来存储一个Unicode字符的编码。

那么说来说去，我们在计算机领域内说的一个“字符”到底是指什么呢？这里我们统一一下，计算机领域内的字符就是指一个Unicode字符，不管存储这个字符的编码用了几个字节，也不管这个字符是可打印字符、不可打印字符还是组合字符，我们都把它算一个字符。有了这个共识，我们才能正确认识“字符串长度”的概念。例如我们用组合字符的方式表示“e̲”，虽然看起来它显示为一个整体，但在Unicode中算两个字符组合（字母“e”和表示下划线，编码为0X0332的COMBINING LOW LINE字符组合而成），因而一个仅包含“e̲”的字符串（从字符角度计数）长度为2（不论其存储占了几个字节）。

## 最终答案

“字符”这个概念是伴随着文字相关研究和信息计数而发展的。虽然在历史上它有过种种含义，但如果你想要一个简单的答案来回答“什么是字符”这个问题，我会建议你把它理解为Unicode字符。当你在讨论字符编码的问题时，一个字符就是一个Unicode字符表上的字符及其编码；当你在讨论字符存储和传输的问题时，一个字符就是一个被存储的Unicode字符编码（与存储它的字节长度无关）。

